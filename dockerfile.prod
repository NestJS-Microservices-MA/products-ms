# Deps
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install

# Builder
FROM node:21-alpine3.19 as build

WORKDIR /usr/src/app

# Copy node_modules from deps
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copy app source code
COPY . .

# RUN npm run test
RUN npm run build

RUN npm ci -f --only=production && npm cache clean --force

RUN npx prisma generate


# Create Docker Image
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

# Copy node_modules from build
COPY --from=build /usr/src/app/node_modules ./node_modules

# Copy dist folders from build
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma


ENV NODE_ENV=production

# Uncomment if we use PostgreSQL instead of SQLite
#USER node

EXPOSE 3000

CMD [ "node", "dist/main.js" ]
